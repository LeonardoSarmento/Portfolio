/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProjectsImport } from './routes/projects'
import { Route as PostsImport } from './routes/posts'
import { Route as LoginImport } from './routes/login'
import { Route as IntroductionImport } from './routes/introduction'
import { Route as ExperienceImport } from './routes/experience'
import { Route as ContactImport } from './routes/contact'
import { Route as AuthImport } from './routes/_auth'
import { Route as IndexImport } from './routes/index'
import { Route as ProjectsIndexImport } from './routes/projects.index'
import { Route as PostsIndexImport } from './routes/posts.index'
import { Route as ProjectsChartsImport } from './routes/projects.charts'
import { Route as ProjectsProjectIdImport } from './routes/projects.$projectId'
import { Route as PostsPostIdImport } from './routes/posts.$postId'
import { Route as InteractiveGamesImport } from './routes/interactive/games'
import { Route as InteractiveGamesIndexImport } from './routes/interactive/games/index'
import { Route as InteractiveComponentsIndexImport } from './routes/interactive/components.index'
import { Route as InteractiveGamesWordleImport } from './routes/interactive/games/wordle'
import { Route as InteractiveGamesTicTacToeImport } from './routes/interactive/games/tic-tac-toe'
import { Route as InteractiveGamesSudokuImport } from './routes/interactive/games/sudoku'
import { Route as InteractiveGamesSnakeImport } from './routes/interactive/games/snake'
import { Route as InteractiveGamesMinesweeperImport } from './routes/interactive/games/minesweeper'
import { Route as InteractiveGamesHangmanImport } from './routes/interactive/games/hangman'
import { Route as InteractiveGamesChessImport } from './routes/interactive/games/chess'
import { Route as InteractiveGames2048Import } from './routes/interactive/games/2048'
import { Route as InteractiveComponentsChartsImport } from './routes/interactive/components/charts'
import { Route as AuthProjectsCreateImport } from './routes/_auth.projects.create'
import { Route as AuthPostsCreateImport } from './routes/_auth.posts.create'
import { Route as AuthProjectsProjectIdEditImport } from './routes/_auth.projects.$projectId.edit'
import { Route as AuthPostsPostIdEditImport } from './routes/_auth.posts.$postId.edit'

// Create/Update Routes

const ProjectsRoute = ProjectsImport.update({
  id: '/projects',
  path: '/projects',
  getParentRoute: () => rootRoute,
} as any)

const PostsRoute = PostsImport.update({
  id: '/posts',
  path: '/posts',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const IntroductionRoute = IntroductionImport.update({
  id: '/introduction',
  path: '/introduction',
  getParentRoute: () => rootRoute,
} as any)

const ExperienceRoute = ExperienceImport.update({
  id: '/experience',
  path: '/experience',
  getParentRoute: () => rootRoute,
} as any)

const ContactRoute = ContactImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProjectsIndexRoute = ProjectsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ProjectsRoute,
} as any)

const PostsIndexRoute = PostsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PostsRoute,
} as any)

const ProjectsChartsRoute = ProjectsChartsImport.update({
  id: '/charts',
  path: '/charts',
  getParentRoute: () => ProjectsRoute,
} as any)

const ProjectsProjectIdRoute = ProjectsProjectIdImport.update({
  id: '/$projectId',
  path: '/$projectId',
  getParentRoute: () => ProjectsRoute,
} as any)

const PostsPostIdRoute = PostsPostIdImport.update({
  id: '/$postId',
  path: '/$postId',
  getParentRoute: () => PostsRoute,
} as any)

const InteractiveGamesRoute = InteractiveGamesImport.update({
  id: '/interactive/games',
  path: '/interactive/games',
  getParentRoute: () => rootRoute,
} as any)

const InteractiveGamesIndexRoute = InteractiveGamesIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => InteractiveGamesRoute,
} as any)

const InteractiveComponentsIndexRoute = InteractiveComponentsIndexImport.update(
  {
    id: '/interactive/components/',
    path: '/interactive/components/',
    getParentRoute: () => rootRoute,
  } as any,
)

const InteractiveGamesWordleRoute = InteractiveGamesWordleImport.update({
  id: '/wordle',
  path: '/wordle',
  getParentRoute: () => InteractiveGamesRoute,
} as any)

const InteractiveGamesTicTacToeRoute = InteractiveGamesTicTacToeImport.update({
  id: '/tic-tac-toe',
  path: '/tic-tac-toe',
  getParentRoute: () => InteractiveGamesRoute,
} as any)

const InteractiveGamesSudokuRoute = InteractiveGamesSudokuImport.update({
  id: '/sudoku',
  path: '/sudoku',
  getParentRoute: () => InteractiveGamesRoute,
} as any)

const InteractiveGamesSnakeRoute = InteractiveGamesSnakeImport.update({
  id: '/snake',
  path: '/snake',
  getParentRoute: () => InteractiveGamesRoute,
} as any)

const InteractiveGamesMinesweeperRoute =
  InteractiveGamesMinesweeperImport.update({
    id: '/minesweeper',
    path: '/minesweeper',
    getParentRoute: () => InteractiveGamesRoute,
  } as any)

const InteractiveGamesHangmanRoute = InteractiveGamesHangmanImport.update({
  id: '/hangman',
  path: '/hangman',
  getParentRoute: () => InteractiveGamesRoute,
} as any)

const InteractiveGamesChessRoute = InteractiveGamesChessImport.update({
  id: '/chess',
  path: '/chess',
  getParentRoute: () => InteractiveGamesRoute,
} as any)

const InteractiveGames2048Route = InteractiveGames2048Import.update({
  id: '/2048',
  path: '/2048',
  getParentRoute: () => InteractiveGamesRoute,
} as any)

const InteractiveComponentsChartsRoute =
  InteractiveComponentsChartsImport.update({
    id: '/interactive/components/charts',
    path: '/interactive/components/charts',
    getParentRoute: () => rootRoute,
  } as any)

const AuthProjectsCreateRoute = AuthProjectsCreateImport.update({
  id: '/projects/create',
  path: '/projects/create',
  getParentRoute: () => AuthRoute,
} as any)

const AuthPostsCreateRoute = AuthPostsCreateImport.update({
  id: '/posts/create',
  path: '/posts/create',
  getParentRoute: () => AuthRoute,
} as any)

const AuthProjectsProjectIdEditRoute = AuthProjectsProjectIdEditImport.update({
  id: '/projects/$projectId/edit',
  path: '/projects/$projectId/edit',
  getParentRoute: () => AuthRoute,
} as any)

const AuthPostsPostIdEditRoute = AuthPostsPostIdEditImport.update({
  id: '/posts/$postId/edit',
  path: '/posts/$postId/edit',
  getParentRoute: () => AuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactImport
      parentRoute: typeof rootRoute
    }
    '/experience': {
      id: '/experience'
      path: '/experience'
      fullPath: '/experience'
      preLoaderRoute: typeof ExperienceImport
      parentRoute: typeof rootRoute
    }
    '/introduction': {
      id: '/introduction'
      path: '/introduction'
      fullPath: '/introduction'
      preLoaderRoute: typeof IntroductionImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/posts': {
      id: '/posts'
      path: '/posts'
      fullPath: '/posts'
      preLoaderRoute: typeof PostsImport
      parentRoute: typeof rootRoute
    }
    '/projects': {
      id: '/projects'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof ProjectsImport
      parentRoute: typeof rootRoute
    }
    '/interactive/games': {
      id: '/interactive/games'
      path: '/interactive/games'
      fullPath: '/interactive/games'
      preLoaderRoute: typeof InteractiveGamesImport
      parentRoute: typeof rootRoute
    }
    '/posts/$postId': {
      id: '/posts/$postId'
      path: '/$postId'
      fullPath: '/posts/$postId'
      preLoaderRoute: typeof PostsPostIdImport
      parentRoute: typeof PostsImport
    }
    '/projects/$projectId': {
      id: '/projects/$projectId'
      path: '/$projectId'
      fullPath: '/projects/$projectId'
      preLoaderRoute: typeof ProjectsProjectIdImport
      parentRoute: typeof ProjectsImport
    }
    '/projects/charts': {
      id: '/projects/charts'
      path: '/charts'
      fullPath: '/projects/charts'
      preLoaderRoute: typeof ProjectsChartsImport
      parentRoute: typeof ProjectsImport
    }
    '/posts/': {
      id: '/posts/'
      path: '/'
      fullPath: '/posts/'
      preLoaderRoute: typeof PostsIndexImport
      parentRoute: typeof PostsImport
    }
    '/projects/': {
      id: '/projects/'
      path: '/'
      fullPath: '/projects/'
      preLoaderRoute: typeof ProjectsIndexImport
      parentRoute: typeof ProjectsImport
    }
    '/_auth/posts/create': {
      id: '/_auth/posts/create'
      path: '/posts/create'
      fullPath: '/posts/create'
      preLoaderRoute: typeof AuthPostsCreateImport
      parentRoute: typeof AuthImport
    }
    '/_auth/projects/create': {
      id: '/_auth/projects/create'
      path: '/projects/create'
      fullPath: '/projects/create'
      preLoaderRoute: typeof AuthProjectsCreateImport
      parentRoute: typeof AuthImport
    }
    '/interactive/components/charts': {
      id: '/interactive/components/charts'
      path: '/interactive/components/charts'
      fullPath: '/interactive/components/charts'
      preLoaderRoute: typeof InteractiveComponentsChartsImport
      parentRoute: typeof rootRoute
    }
    '/interactive/games/2048': {
      id: '/interactive/games/2048'
      path: '/2048'
      fullPath: '/interactive/games/2048'
      preLoaderRoute: typeof InteractiveGames2048Import
      parentRoute: typeof InteractiveGamesImport
    }
    '/interactive/games/chess': {
      id: '/interactive/games/chess'
      path: '/chess'
      fullPath: '/interactive/games/chess'
      preLoaderRoute: typeof InteractiveGamesChessImport
      parentRoute: typeof InteractiveGamesImport
    }
    '/interactive/games/hangman': {
      id: '/interactive/games/hangman'
      path: '/hangman'
      fullPath: '/interactive/games/hangman'
      preLoaderRoute: typeof InteractiveGamesHangmanImport
      parentRoute: typeof InteractiveGamesImport
    }
    '/interactive/games/minesweeper': {
      id: '/interactive/games/minesweeper'
      path: '/minesweeper'
      fullPath: '/interactive/games/minesweeper'
      preLoaderRoute: typeof InteractiveGamesMinesweeperImport
      parentRoute: typeof InteractiveGamesImport
    }
    '/interactive/games/snake': {
      id: '/interactive/games/snake'
      path: '/snake'
      fullPath: '/interactive/games/snake'
      preLoaderRoute: typeof InteractiveGamesSnakeImport
      parentRoute: typeof InteractiveGamesImport
    }
    '/interactive/games/sudoku': {
      id: '/interactive/games/sudoku'
      path: '/sudoku'
      fullPath: '/interactive/games/sudoku'
      preLoaderRoute: typeof InteractiveGamesSudokuImport
      parentRoute: typeof InteractiveGamesImport
    }
    '/interactive/games/tic-tac-toe': {
      id: '/interactive/games/tic-tac-toe'
      path: '/tic-tac-toe'
      fullPath: '/interactive/games/tic-tac-toe'
      preLoaderRoute: typeof InteractiveGamesTicTacToeImport
      parentRoute: typeof InteractiveGamesImport
    }
    '/interactive/games/wordle': {
      id: '/interactive/games/wordle'
      path: '/wordle'
      fullPath: '/interactive/games/wordle'
      preLoaderRoute: typeof InteractiveGamesWordleImport
      parentRoute: typeof InteractiveGamesImport
    }
    '/interactive/components/': {
      id: '/interactive/components/'
      path: '/interactive/components'
      fullPath: '/interactive/components'
      preLoaderRoute: typeof InteractiveComponentsIndexImport
      parentRoute: typeof rootRoute
    }
    '/interactive/games/': {
      id: '/interactive/games/'
      path: '/'
      fullPath: '/interactive/games/'
      preLoaderRoute: typeof InteractiveGamesIndexImport
      parentRoute: typeof InteractiveGamesImport
    }
    '/_auth/posts/$postId/edit': {
      id: '/_auth/posts/$postId/edit'
      path: '/posts/$postId/edit'
      fullPath: '/posts/$postId/edit'
      preLoaderRoute: typeof AuthPostsPostIdEditImport
      parentRoute: typeof AuthImport
    }
    '/_auth/projects/$projectId/edit': {
      id: '/_auth/projects/$projectId/edit'
      path: '/projects/$projectId/edit'
      fullPath: '/projects/$projectId/edit'
      preLoaderRoute: typeof AuthProjectsProjectIdEditImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthPostsCreateRoute: typeof AuthPostsCreateRoute
  AuthProjectsCreateRoute: typeof AuthProjectsCreateRoute
  AuthPostsPostIdEditRoute: typeof AuthPostsPostIdEditRoute
  AuthProjectsProjectIdEditRoute: typeof AuthProjectsProjectIdEditRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthPostsCreateRoute: AuthPostsCreateRoute,
  AuthProjectsCreateRoute: AuthProjectsCreateRoute,
  AuthPostsPostIdEditRoute: AuthPostsPostIdEditRoute,
  AuthProjectsProjectIdEditRoute: AuthProjectsProjectIdEditRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface PostsRouteChildren {
  PostsPostIdRoute: typeof PostsPostIdRoute
  PostsIndexRoute: typeof PostsIndexRoute
}

const PostsRouteChildren: PostsRouteChildren = {
  PostsPostIdRoute: PostsPostIdRoute,
  PostsIndexRoute: PostsIndexRoute,
}

const PostsRouteWithChildren = PostsRoute._addFileChildren(PostsRouteChildren)

interface ProjectsRouteChildren {
  ProjectsProjectIdRoute: typeof ProjectsProjectIdRoute
  ProjectsChartsRoute: typeof ProjectsChartsRoute
  ProjectsIndexRoute: typeof ProjectsIndexRoute
}

const ProjectsRouteChildren: ProjectsRouteChildren = {
  ProjectsProjectIdRoute: ProjectsProjectIdRoute,
  ProjectsChartsRoute: ProjectsChartsRoute,
  ProjectsIndexRoute: ProjectsIndexRoute,
}

const ProjectsRouteWithChildren = ProjectsRoute._addFileChildren(
  ProjectsRouteChildren,
)

interface InteractiveGamesRouteChildren {
  InteractiveGames2048Route: typeof InteractiveGames2048Route
  InteractiveGamesChessRoute: typeof InteractiveGamesChessRoute
  InteractiveGamesHangmanRoute: typeof InteractiveGamesHangmanRoute
  InteractiveGamesMinesweeperRoute: typeof InteractiveGamesMinesweeperRoute
  InteractiveGamesSnakeRoute: typeof InteractiveGamesSnakeRoute
  InteractiveGamesSudokuRoute: typeof InteractiveGamesSudokuRoute
  InteractiveGamesTicTacToeRoute: typeof InteractiveGamesTicTacToeRoute
  InteractiveGamesWordleRoute: typeof InteractiveGamesWordleRoute
  InteractiveGamesIndexRoute: typeof InteractiveGamesIndexRoute
}

const InteractiveGamesRouteChildren: InteractiveGamesRouteChildren = {
  InteractiveGames2048Route: InteractiveGames2048Route,
  InteractiveGamesChessRoute: InteractiveGamesChessRoute,
  InteractiveGamesHangmanRoute: InteractiveGamesHangmanRoute,
  InteractiveGamesMinesweeperRoute: InteractiveGamesMinesweeperRoute,
  InteractiveGamesSnakeRoute: InteractiveGamesSnakeRoute,
  InteractiveGamesSudokuRoute: InteractiveGamesSudokuRoute,
  InteractiveGamesTicTacToeRoute: InteractiveGamesTicTacToeRoute,
  InteractiveGamesWordleRoute: InteractiveGamesWordleRoute,
  InteractiveGamesIndexRoute: InteractiveGamesIndexRoute,
}

const InteractiveGamesRouteWithChildren =
  InteractiveGamesRoute._addFileChildren(InteractiveGamesRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthRouteWithChildren
  '/contact': typeof ContactRoute
  '/experience': typeof ExperienceRoute
  '/introduction': typeof IntroductionRoute
  '/login': typeof LoginRoute
  '/posts': typeof PostsRouteWithChildren
  '/projects': typeof ProjectsRouteWithChildren
  '/interactive/games': typeof InteractiveGamesRouteWithChildren
  '/posts/$postId': typeof PostsPostIdRoute
  '/projects/$projectId': typeof ProjectsProjectIdRoute
  '/projects/charts': typeof ProjectsChartsRoute
  '/posts/': typeof PostsIndexRoute
  '/projects/': typeof ProjectsIndexRoute
  '/posts/create': typeof AuthPostsCreateRoute
  '/projects/create': typeof AuthProjectsCreateRoute
  '/interactive/components/charts': typeof InteractiveComponentsChartsRoute
  '/interactive/games/2048': typeof InteractiveGames2048Route
  '/interactive/games/chess': typeof InteractiveGamesChessRoute
  '/interactive/games/hangman': typeof InteractiveGamesHangmanRoute
  '/interactive/games/minesweeper': typeof InteractiveGamesMinesweeperRoute
  '/interactive/games/snake': typeof InteractiveGamesSnakeRoute
  '/interactive/games/sudoku': typeof InteractiveGamesSudokuRoute
  '/interactive/games/tic-tac-toe': typeof InteractiveGamesTicTacToeRoute
  '/interactive/games/wordle': typeof InteractiveGamesWordleRoute
  '/interactive/components': typeof InteractiveComponentsIndexRoute
  '/interactive/games/': typeof InteractiveGamesIndexRoute
  '/posts/$postId/edit': typeof AuthPostsPostIdEditRoute
  '/projects/$projectId/edit': typeof AuthProjectsProjectIdEditRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthRouteWithChildren
  '/contact': typeof ContactRoute
  '/experience': typeof ExperienceRoute
  '/introduction': typeof IntroductionRoute
  '/login': typeof LoginRoute
  '/posts/$postId': typeof PostsPostIdRoute
  '/projects/$projectId': typeof ProjectsProjectIdRoute
  '/projects/charts': typeof ProjectsChartsRoute
  '/posts': typeof PostsIndexRoute
  '/projects': typeof ProjectsIndexRoute
  '/posts/create': typeof AuthPostsCreateRoute
  '/projects/create': typeof AuthProjectsCreateRoute
  '/interactive/components/charts': typeof InteractiveComponentsChartsRoute
  '/interactive/games/2048': typeof InteractiveGames2048Route
  '/interactive/games/chess': typeof InteractiveGamesChessRoute
  '/interactive/games/hangman': typeof InteractiveGamesHangmanRoute
  '/interactive/games/minesweeper': typeof InteractiveGamesMinesweeperRoute
  '/interactive/games/snake': typeof InteractiveGamesSnakeRoute
  '/interactive/games/sudoku': typeof InteractiveGamesSudokuRoute
  '/interactive/games/tic-tac-toe': typeof InteractiveGamesTicTacToeRoute
  '/interactive/games/wordle': typeof InteractiveGamesWordleRoute
  '/interactive/components': typeof InteractiveComponentsIndexRoute
  '/interactive/games': typeof InteractiveGamesIndexRoute
  '/posts/$postId/edit': typeof AuthPostsPostIdEditRoute
  '/projects/$projectId/edit': typeof AuthProjectsProjectIdEditRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteWithChildren
  '/contact': typeof ContactRoute
  '/experience': typeof ExperienceRoute
  '/introduction': typeof IntroductionRoute
  '/login': typeof LoginRoute
  '/posts': typeof PostsRouteWithChildren
  '/projects': typeof ProjectsRouteWithChildren
  '/interactive/games': typeof InteractiveGamesRouteWithChildren
  '/posts/$postId': typeof PostsPostIdRoute
  '/projects/$projectId': typeof ProjectsProjectIdRoute
  '/projects/charts': typeof ProjectsChartsRoute
  '/posts/': typeof PostsIndexRoute
  '/projects/': typeof ProjectsIndexRoute
  '/_auth/posts/create': typeof AuthPostsCreateRoute
  '/_auth/projects/create': typeof AuthProjectsCreateRoute
  '/interactive/components/charts': typeof InteractiveComponentsChartsRoute
  '/interactive/games/2048': typeof InteractiveGames2048Route
  '/interactive/games/chess': typeof InteractiveGamesChessRoute
  '/interactive/games/hangman': typeof InteractiveGamesHangmanRoute
  '/interactive/games/minesweeper': typeof InteractiveGamesMinesweeperRoute
  '/interactive/games/snake': typeof InteractiveGamesSnakeRoute
  '/interactive/games/sudoku': typeof InteractiveGamesSudokuRoute
  '/interactive/games/tic-tac-toe': typeof InteractiveGamesTicTacToeRoute
  '/interactive/games/wordle': typeof InteractiveGamesWordleRoute
  '/interactive/components/': typeof InteractiveComponentsIndexRoute
  '/interactive/games/': typeof InteractiveGamesIndexRoute
  '/_auth/posts/$postId/edit': typeof AuthPostsPostIdEditRoute
  '/_auth/projects/$projectId/edit': typeof AuthProjectsProjectIdEditRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/contact'
    | '/experience'
    | '/introduction'
    | '/login'
    | '/posts'
    | '/projects'
    | '/interactive/games'
    | '/posts/$postId'
    | '/projects/$projectId'
    | '/projects/charts'
    | '/posts/'
    | '/projects/'
    | '/posts/create'
    | '/projects/create'
    | '/interactive/components/charts'
    | '/interactive/games/2048'
    | '/interactive/games/chess'
    | '/interactive/games/hangman'
    | '/interactive/games/minesweeper'
    | '/interactive/games/snake'
    | '/interactive/games/sudoku'
    | '/interactive/games/tic-tac-toe'
    | '/interactive/games/wordle'
    | '/interactive/components'
    | '/interactive/games/'
    | '/posts/$postId/edit'
    | '/projects/$projectId/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/contact'
    | '/experience'
    | '/introduction'
    | '/login'
    | '/posts/$postId'
    | '/projects/$projectId'
    | '/projects/charts'
    | '/posts'
    | '/projects'
    | '/posts/create'
    | '/projects/create'
    | '/interactive/components/charts'
    | '/interactive/games/2048'
    | '/interactive/games/chess'
    | '/interactive/games/hangman'
    | '/interactive/games/minesweeper'
    | '/interactive/games/snake'
    | '/interactive/games/sudoku'
    | '/interactive/games/tic-tac-toe'
    | '/interactive/games/wordle'
    | '/interactive/components'
    | '/interactive/games'
    | '/posts/$postId/edit'
    | '/projects/$projectId/edit'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/contact'
    | '/experience'
    | '/introduction'
    | '/login'
    | '/posts'
    | '/projects'
    | '/interactive/games'
    | '/posts/$postId'
    | '/projects/$projectId'
    | '/projects/charts'
    | '/posts/'
    | '/projects/'
    | '/_auth/posts/create'
    | '/_auth/projects/create'
    | '/interactive/components/charts'
    | '/interactive/games/2048'
    | '/interactive/games/chess'
    | '/interactive/games/hangman'
    | '/interactive/games/minesweeper'
    | '/interactive/games/snake'
    | '/interactive/games/sudoku'
    | '/interactive/games/tic-tac-toe'
    | '/interactive/games/wordle'
    | '/interactive/components/'
    | '/interactive/games/'
    | '/_auth/posts/$postId/edit'
    | '/_auth/projects/$projectId/edit'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  ContactRoute: typeof ContactRoute
  ExperienceRoute: typeof ExperienceRoute
  IntroductionRoute: typeof IntroductionRoute
  LoginRoute: typeof LoginRoute
  PostsRoute: typeof PostsRouteWithChildren
  ProjectsRoute: typeof ProjectsRouteWithChildren
  InteractiveGamesRoute: typeof InteractiveGamesRouteWithChildren
  InteractiveComponentsChartsRoute: typeof InteractiveComponentsChartsRoute
  InteractiveComponentsIndexRoute: typeof InteractiveComponentsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  ContactRoute: ContactRoute,
  ExperienceRoute: ExperienceRoute,
  IntroductionRoute: IntroductionRoute,
  LoginRoute: LoginRoute,
  PostsRoute: PostsRouteWithChildren,
  ProjectsRoute: ProjectsRouteWithChildren,
  InteractiveGamesRoute: InteractiveGamesRouteWithChildren,
  InteractiveComponentsChartsRoute: InteractiveComponentsChartsRoute,
  InteractiveComponentsIndexRoute: InteractiveComponentsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/contact",
        "/experience",
        "/introduction",
        "/login",
        "/posts",
        "/projects",
        "/interactive/games",
        "/interactive/components/charts",
        "/interactive/components/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/posts/create",
        "/_auth/projects/create",
        "/_auth/posts/$postId/edit",
        "/_auth/projects/$projectId/edit"
      ]
    },
    "/contact": {
      "filePath": "contact.tsx"
    },
    "/experience": {
      "filePath": "experience.tsx"
    },
    "/introduction": {
      "filePath": "introduction.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/posts": {
      "filePath": "posts.tsx",
      "children": [
        "/posts/$postId",
        "/posts/"
      ]
    },
    "/projects": {
      "filePath": "projects.tsx",
      "children": [
        "/projects/$projectId",
        "/projects/charts",
        "/projects/"
      ]
    },
    "/interactive/games": {
      "filePath": "interactive/games.tsx",
      "children": [
        "/interactive/games/2048",
        "/interactive/games/chess",
        "/interactive/games/hangman",
        "/interactive/games/minesweeper",
        "/interactive/games/snake",
        "/interactive/games/sudoku",
        "/interactive/games/tic-tac-toe",
        "/interactive/games/wordle",
        "/interactive/games/"
      ]
    },
    "/posts/$postId": {
      "filePath": "posts.$postId.tsx",
      "parent": "/posts"
    },
    "/projects/$projectId": {
      "filePath": "projects.$projectId.tsx",
      "parent": "/projects"
    },
    "/projects/charts": {
      "filePath": "projects.charts.tsx",
      "parent": "/projects"
    },
    "/posts/": {
      "filePath": "posts.index.tsx",
      "parent": "/posts"
    },
    "/projects/": {
      "filePath": "projects.index.tsx",
      "parent": "/projects"
    },
    "/_auth/posts/create": {
      "filePath": "_auth.posts.create.tsx",
      "parent": "/_auth"
    },
    "/_auth/projects/create": {
      "filePath": "_auth.projects.create.tsx",
      "parent": "/_auth"
    },
    "/interactive/components/charts": {
      "filePath": "interactive/components/charts.tsx"
    },
    "/interactive/games/2048": {
      "filePath": "interactive/games/2048.tsx",
      "parent": "/interactive/games"
    },
    "/interactive/games/chess": {
      "filePath": "interactive/games/chess.tsx",
      "parent": "/interactive/games"
    },
    "/interactive/games/hangman": {
      "filePath": "interactive/games/hangman.tsx",
      "parent": "/interactive/games"
    },
    "/interactive/games/minesweeper": {
      "filePath": "interactive/games/minesweeper.tsx",
      "parent": "/interactive/games"
    },
    "/interactive/games/snake": {
      "filePath": "interactive/games/snake.tsx",
      "parent": "/interactive/games"
    },
    "/interactive/games/sudoku": {
      "filePath": "interactive/games/sudoku.tsx",
      "parent": "/interactive/games"
    },
    "/interactive/games/tic-tac-toe": {
      "filePath": "interactive/games/tic-tac-toe.tsx",
      "parent": "/interactive/games"
    },
    "/interactive/games/wordle": {
      "filePath": "interactive/games/wordle.tsx",
      "parent": "/interactive/games"
    },
    "/interactive/components/": {
      "filePath": "interactive/components.index.tsx"
    },
    "/interactive/games/": {
      "filePath": "interactive/games/index.tsx",
      "parent": "/interactive/games"
    },
    "/_auth/posts/$postId/edit": {
      "filePath": "_auth.posts.$postId.edit.tsx",
      "parent": "/_auth"
    },
    "/_auth/projects/$projectId/edit": {
      "filePath": "_auth.projects.$projectId.edit.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
